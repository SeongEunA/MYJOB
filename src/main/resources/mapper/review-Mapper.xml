<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 모든 SQL문을 mapper태그 안에 작성 -->
<mapper namespace="reviewMapper">
	<!-- REVIEW_BOARD Table -->
	<resultMap type="com.kh.myjob.review.vo.ReviewVO" id="reviewBoard">
		<id column="REVIEW_BOARD_CODE"  				property="reviewBoardCode"/>
		<result column="REVIEW_BOARD_TITLE" 			property="reviewBoardTitle"/>
		<result column="REVIEW_BOARD_CONTENT" 			property="reviewBoardContent"/>
		<result column="REVIEW_BOARD_WRITER"	 		property="reviewBoardWriter"/>
		<result column="REVIEW_BOARD_REG_DATE"          property="reviewBoardRegDate"/>
		<result column="REVIEW_BOARD_READ_CNT" 		    property="reviewBoardReadCnt"/>
		<result column="REVIEW_BOARD_RECOMMEND_CNT" 	property="reviewBoardRecommendCnt"/>
		<collection property="reviewImgList" 			resultMap="reviewImg"></collection>
	</resultMap>
	<!-- REVIEW_IMG Table -->
	<resultMap type="com.kh.myjob.review.vo.ReviewImgVO" id="reviewImg">
		<id column="REVIEW_IMG_CODE"  				    property="reviewImgCode"/>
		<result column="REVIEW_IMG_ORIGIN_NAME" 	    property="reviewImgOriginName"/>
		<result column="REVIEW_IMG_ATTACHED_NAME" 	    property="reviewImgAttachedName"/>
		<result column="REVIEW_BOARD_CODE"	 		    property="reviewBoardCode"/>
		<result column="IS_MAIN" 					    property="isMain"/>
	</resultMap>
	<!-- REVIEW_BOARD_REPLY Table -->
	<resultMap type="com.kh.myjob.review.vo.ReviewReplyVO" id="reviewReply">
		<id column="REVIEW_REPLY_CODE"  				property="reviewReplyCode"/>
		<result column="MEMBER_ID" 						property="memberId"/>
		<result column="REVIEW_REPLY_WRITER" 			property="reviewReplyWriter"/>
		<result column="REVIEW_REPLY_REG_DATE" 			property="reviewReplyRegDate"/>
		<result column="REVIEW_REPLY_CONTENT"	 		property="reviewReplyContent"/>
	    <result column="REVIEW_BOARD_CODE" 			    property="reviewBoardCode"/>
	</resultMap>
	
	
	
	<!--후기등록  -->
	<insert id="insertReview">
		INSERT INTO REVIEW_BOARD(
			REVIEW_BOARD_CODE
			, REVIEW_BOARD_TITLE
			, REVIEW_BOARD_CONTENT
			, REVIEW_BOARD_WRITER
		) VALUES(
			#{reviewBoardCode}
			, #{reviewBoardTitle}
			, #{reviewBoardContent}
			, #{reviewBoardWriter}
		)
	</insert>
	<!--후기코드를 조회(이미지에 후기코드를 활용하기위해)  -->
	<select id="selectNextReviewBoardCode" resultType="String">
		SELECT 'REVIEW_BOARD_'|| LPAD((NVL(MAX(TO_NUMBER(SUBSTR(REVIEW_BOARD_CODE,14,3))), 0) + 1), 3 ,'0') FROM REVIEW_BOARD
	</select>
	<!--다음 이미지 코드 조회  -->
	<select id="selectNextReviewNumber" resultType="int">
		SELECT NVL(MAX(TO_NUMBER(SUBSTR(REVIEW_IMG_CODE, 12, 3))) + 1, 1) FROM REVIEW_IMG
	</select>
	
	<!--후기게시판 이미지삽입  -->
	<insert id="insertReviewImg">
		INSERT INTO REVIEW_IMG(
			REVIEW_IMG_CODE
			, REVIEW_IMG_ORIGIN_NAME
			, REVIEW_IMG_ATTACHED_NAME
			, REVIEW_BOARD_CODE
			, IS_MAIN
		) 
		 <foreach collection="reviewImgList" item="reviewImgInfo" separator="UNION ALL"> 
			SELECT #{reviewImgInfo.reviewImgCode}
				, #{reviewImgInfo.reviewImgOriginName}
				, #{reviewImgInfo.reviewImgAttachedName}
				, #{reviewImgInfo.reviewBoardCode}
				, #{reviewImgInfo.isMain}
				FROM DUAL
		</foreach> 
				
	</insert>
	
	<!--후기 리스트 조회  -->
	<select id="selectReviewList" resultMap="reviewBoard">
		SELECT REVIEW_BOARD_CODE
		    , REVIEW_BOARD_TITLE
		    , REVIEW_BOARD_CONTENT
		    , REVIEW_BOARD_WRITER
		    , REVIEW_BOARD_REG_DATE
		    , REVIEW_BOARD_RECOMMEND_CNT
		    , REVIEW_BOARD_READ_CNT
		    , REVIEW_IMG_ATTACHED_NAME
		    , IS_MAIN
		    , ROW_NUM	
	FROM
	(	
		SELECT REVIEW_BOARD_CODE
		    , REVIEW_BOARD_TITLE
		    , REVIEW_BOARD_CONTENT
		    , REVIEW_BOARD_WRITER
		    , REVIEW_BOARD_REG_DATE
		    , REVIEW_BOARD_RECOMMEND_CNT
		    , REVIEW_BOARD_READ_CNT
		    , REVIEW_IMG_ATTACHED_NAME
		    , IS_MAIN
		    , ROWNUM AS ROW_NUM	
	FROM
	(	
		SELECT R.REVIEW_BOARD_CODE
		    , REVIEW_BOARD_TITLE
		    , REVIEW_BOARD_CONTENT
		    , REVIEW_BOARD_WRITER
		    , TO_CHAR(REVIEW_BOARD_REG_DATE, 'YYYY.MM.DD') AS REVIEW_BOARD_REG_DATE
		    , REVIEW_BOARD_RECOMMEND_CNT
		    , REVIEW_BOARD_READ_CNT
		    , REVIEW_IMG_ATTACHED_NAME
		    , IS_MAIN
		FROM REVIEW_BOARD R, REVIEW_IMG I
		WHERE IS_MAIN = 'Y'
		AND R.REVIEW_BOARD_CODE = I.REVIEW_BOARD_CODE
		<if test="searchValue != null and !searchValue.equals('')">
			AND	${searchKeyword} LIKE '%'||#{searchValue}||'%'
		</if>     
        ORDER BY REVIEW_BOARD_RECOMMEND_CNT DESC, REVIEW_BOARD_CODE 	
	)
	)
	WHERE ROW_NUM &gt;= #{startNum} AND ROW_NUM &lt;= #{endNum}
	
	
	</select>
	
	<!-- 관리자에서 리뷰 관리 전체 리뷰 목록조회(이미지정보 제외) -->
	<select id="manageReviewList" resultMap="reviewBoard">
		SELECT REVIEW_BOARD_CODE
			, REVIEW_BOARD_TITLE
         	, REVIEW_BOARD_CONTENT
			, REVIEW_BOARD_WRITER
         	, REVIEW_BOARD_REG_DATE
			, REVIEW_BOARD_RECOMMEND_CNT
			, REVIEW_BOARD_READ_CNT
         	, ROW_NUM
      	FROM
      	(
      		SELECT REVIEW_BOARD_CODE
        		, REVIEW_BOARD_TITLE
         		, REVIEW_BOARD_CONTENT
				, REVIEW_BOARD_WRITER
				, REVIEW_BOARD_REG_DATE
				, REVIEW_BOARD_RECOMMEND_CNT
				, REVIEW_BOARD_READ_CNT
         		, ROWNUM AS ROW_NUM
      		FROM
      		(
	      		SELECT REVIEW_BOARD_CODE
	        		, REVIEW_BOARD_TITLE
	         		, REVIEW_BOARD_CONTENT
					, REVIEW_BOARD_WRITER
	         		, TO_CHAR(REVIEW_BOARD_REG_DATE, 'YYYY.MM.DD') AS REVIEW_BOARD_REG_DATE
	         		, REVIEW_BOARD_RECOMMEND_CNT
					, REVIEW_BOARD_READ_CNT
		      	FROM REVIEW_BOARD
		      	<if test="searchValue != null and !searchValue.equals('')">
		      	WHERE ${searchKeyword} LIKE '%'||#{searchValue}||'%'
		      	</if>
		      	ORDER BY REVIEW_BOARD_CODE DESC
      		)
      	)
		WHERE ROW_NUM &gt;= #{startNum} AND ROW_NUM &lt;= #{endNum}
	</select>
	
	<!--후기 게시판 상세보기  -->
	<select id="selectReviewDetail" resultMap="reviewBoard">
		SELECT REVIEW_BOARD_CODE
			, REVIEW_BOARD_TITLE
			, REVIEW_BOARD_CONTENT
			, REVIEW_BOARD_WRITER
			, TO_CHAR(REVIEW_BOARD_REG_DATE, 'YYYY.MM.DD') AS REVIEW_BOARD_REG_DATE
			, REVIEW_BOARD_RECOMMEND_CNT
			, REVIEW_BOARD_READ_CNT
		FROM REVIEW_BOARD
		WHERE REVIEW_BOARD_CODE = #{reviewBoardCode}
	</select>
	
	<!--후기게시글 추천수 증가  -->
	<update id="updateReadCnt">
		UPDATE REVIEW_BOARD
		SET REVIEW_BOARD_READ_CNT = REVIEW_BOARD_READ_CNT + 1
		<if test="reviewBoardCode != null">
	    WHERE REVIEW_BOARD_CODE = #{reviewBoardCode}
		</if>
	</update>
	
	<!-- 후기게시글 삭제 -->
	<delete id="deleteReviewBoard">
		DELETE REVIEW_BOARD
		WHERE REVIEW_BOARD_CODE = #{reviewBoardCode}
	</delete>
	
	<!--후기게시판 댓글등록  -->
	<insert id="regReply">
		INSERT INTO REVIEW_REPLY(
			REVIEW_REPLY_CODE
			, MEMBER_ID
			, REVIEW_REPLY_WRITER
			, REVIEW_REPLY_CONTENT
			, REVIEW_BOARD_CODE
		) VALUES(
			(SELECT 'REVIEW_REPLY_'|| LPAD((NVL(MAX(TO_NUMBER(SUBSTR(REVIEW_REPLY_CODE,14,3))), 0) + 1), 3 ,'0') FROM REVIEW_REPLY)
			, #{memberId}
			, #{reviewReplyWriter}
			, #{reviewReplyContent}
			, #{reviewBoardCode}
		)
	</insert>
	
	<!--관리자 댓글 관리 전체댓글 목록조회  -->
	<select id="manageReplyList" resultMap="reviewReply">
		SELECT REVIEW_REPLY_CODE
			, REVIEW_REPLY_WRITER
         	, REVIEW_REPLY_REG_DATE
			, REVIEW_REPLY_CONTENT
			, REVIEW_BOARD_CODE
         	, ROW_NUM
      	FROM
      	(
      		SELECT REVIEW_REPLY_CODE
        		, REVIEW_REPLY_WRITER
         		, REVIEW_REPLY_REG_DATE
				, REVIEW_REPLY_CONTENT
				, REVIEW_BOARD_CODE
         		, ROWNUM AS ROW_NUM
      		FROM
      		(
	      		SELECT REVIEW_REPLY_CODE
	        		, REVIEW_REPLY_WRITER
					, TO_CHAR(REVIEW_REPLY_REG_DATE, 'YYYY.MM.DD') AS REVIEW_REPLY_REG_DATE
	         		, REVIEW_REPLY_CONTENT
					, REVIEW_BOARD_CODE
		      	FROM REVIEW_REPLY
		      	<if test="searchValue != null and !searchValue.equals('')">
		      	WHERE ${searchKeyword} LIKE '%'||#{searchValue}||'%'
		      	</if>
		      	ORDER BY REVIEW_REPLY_CODE DESC
      		)
      	)
		WHERE ROW_NUM &gt;= #{startNum} AND ROW_NUM &lt;= #{endNum}
	</select>
	
	<!-- 관리자 댓글 관리 댓글상세정보 -->
	<select id="selectReplyDetail" resultMap="reviewReply">
		SELECT REVIEW_REPLY_CODE
			, REVIEW_REPLY_WRITER
			, TO_CHAR(REVIEW_REPLY_REG_DATE, 'YYYY.MM.DD') AS REVIEW_REPLY_REG_DATE
			, REVIEW_REPLY_CONTENT
			, REVIEW_BOARD_CODE
		FROM REVIEW_REPLY
		WHERE REVIEW_REPLY_CODE = #{reviewReplyCode}
	</select>
	
	<!-- 관리자 댓글 관리 댓글 상세페이지에서 댓글 삭제 -->
	<select id="deleteReviewReplyManage">
		DELETE REVIEW_REPLY
		WHERE REVIEW_REPLY_CODE = #{reviewReplyCode}
	</select>
	
	<!--후기게시판에 댓글목록 조회  -->
	<select id="selectReviewReplyList" resultMap="reviewReply">
		SELECT REVIEW_REPLY_CODE
			, MEMBER_ID
			, REVIEW_REPLY_WRITER 
			, REVIEW_REPLY_REG_DATE
			, REVIEW_REPLY_CONTENT
			, REVIEW_BOARD_CODE
			, MEMBER_ID
		FROM REVIEW_REPLY
		WHERE REVIEW_BOARD_CODE = #{reviewBoardCode} 
		ORDER BY REVIEW_REPLY_CODE DESC	
	</select>
	
	<!--후기게시판에 댓글삭제  -->
	<delete id="deleteReviewReply">
		DELETE REVIEW_REPLY
		WHERE REVIEW_REPLY_CODE = #{reviewReplyCode}
	</delete>
	
	<!--후기리스트 페이지 게시글수  -->
	<select id="selectReviewCnt" resultType="int">
		SELECT COUNT(REVIEW_BOARD_CODE)
		FROM REVIEW_BOARD
		<if test="searchValue != null and !searchValue.equals('')">
      		WHERE ${searchKeyword} LIKE '%'||#{searchValue}||'%'
      	</if>
	</select>
	
	<!--관리자 리뷰후기 관리 전체 게시글수  -->
	<select id="manageReviewCnt" resultType="int">
		SELECT COUNT(REVIEW_BOARD_CODE)
		FROM REVIEW_BOARD
		<if test="searchValue != null and !searchValue.equals('')">
      		WHERE ${searchKeyword} LIKE '%'||#{searchValue}||'%'
      	</if>
	</select>
	
	<!-- 관리자 댓글 관리 전체 댓글수 -->
	<select id="manageReplyCnt" resultType="int">
		SELECT COUNT(REVIEW_REPLY_CODE)
		FROM REVIEW_REPLY
		<if test="searchValue != null and !searchValue.equals('')">
      	WHERE ${searchKeyword} LIKE '%'||#{searchValue}||'%'
      	</if>
	</select>
	
</mapper>












