<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 모든 SQL문을 mapper태그 안에 작성 -->
<mapper namespace="courseMapper">
	<!-- Category Table -->
	<resultMap type="com.kh.myjob.course.vo.CategoryVO" id="category">
		<id column="CATE_CODE" 		property="cateCode"/>
		<result column="CATE_NAME" 	property="cateName"/>
	</resultMap>
	<!-- Location_Code Table -->
	<resultMap type="com.kh.myjob.course.vo.LocationVO" id="location">
		<result column="HIGH_LOCATION_NAME" 	property="highLocationName"/>
		<result column="LOW_LOCATION_NAME" 		property="lowLocationName"/>
		<result column="LOCATION_TEMP_CODE" 	property="locationTempCode"/>
		<result column="LOCATION_LAND_CODE" 	property="locationLandCode"/>
	</resultMap>
	<!-- Place Table -->
	<resultMap type="com.kh.myjob.course.vo.PlaceVO" id="place">
		<id column="PLACE_CODE" 			property="placeCode"/>
		<result column="CATE_CODE" 			property="cateCode"/>
		<result column="PLACE_NAME" 		property="placeName"/>
		<result column="PLACE_ADDR" 		property="placeAddr"/>
		<result column="PLACE_TEL"			property="placeTel"/>
		<result column="STAY_ROOM_NUM"		property="stayRoomNum"/>
		<result column="PLACE_PLAY_LAND"	property="placePlayLand"/>
		<result column="PLACE_IS_PARK"		property="placeIsPark"/>
		<result column="PLACE_URL"			property="placeUrl"/>
		<result column="SATY_AROUND_PLACE"	property="stayAroundPlace"/>
		<result column="X"					property="x"/>
		<result column="Y"					property="y"/>
		<result column="VIEW_INTRO"			property="viewIntro"/>
	</resultMap>

	<!-- COURSE_REG_PLACE table -->
	<resultMap type="com.kh.myjob.course.vo.CourseRegVO" id="courseRegPlace">
		
		<id column="SAVE_PLACE_CODE" 		property="savePlaceCode"/>
		<result column="COURSE_CODE" 		property="courseCode"/>
		<result column="CATE_CODE" 			property="cateCode"/>
		<result column="PLACE_NAME" 		property="placeName"/>
		<result column="PLACE_ADDR" 		property="placeAddr"/>
		<result column="PLACE_TEL"			property="placeTel"/>
		<result column="MEMBER_ID"			property="memberId"/>
		<result column="COURSE_NAME"		property="courseName"/>
	</resultMap>
	
		<!-- COURSE table -->
	<resultMap type="com.kh.myjob.course.vo.CourseVO" id="course">
		<id column="COURSE_CODE" 			property="courseCode"/>
		<result column="MEMBER_ID"			property="memberId"/>
		<result column="COURSE_NAME"		property="courseName"/>
		<collection property="coursePlaceList" resultMap="courseRegPlace"></collection>
	</resultMap>

	<!-- 상위 지역이름 리스트조회 -->
	<select id="selectHighLocationList" resultMap="location">
		SELECT HIGH_LOCATION_NAME
			, LOCATION_LAND_CODE
		FROM LOCATION_CODE
		GROUP BY HIGH_LOCATION_NAME, LOCATION_ORDER, LOCATION_LAND_CODE
		ORDER BY LOCATION_ORDER
	</select>
	
	<!--하위 지역 이름 리스트 조회-->
	<select id="selectLowLocationList" resultMap="location">
		SELECT LOW_LOCATION_NAME
			, LOCATION_TEMP_CODE
		FROM LOCATION_CODE
		WHERE LOCATION_LAND_CODE = #{locationLandCode}
	</select>

	<!-- Place 목록 조회 -->
	<select id="selectPlaceList" resultMap="place">
		SELECT PLACE_CODE
			, PLACE_NAME
			, PLACE_ADDR
			, PLACE_TEL
			, PLACE_PLAY_LAND
			, PLACE_IS_PARK
			, PLACE_URL
			, X
			, Y
			, CATE_CODE
			, ROW_NUM
		FROM(
				SELECT PLACE_CODE
					, PLACE_NAME
					, PLACE_ADDR
					, PLACE_TEL
					, PLACE_PLAY_LAND
					, PLACE_IS_PARK
					, PLACE_URL
					, X
					, Y
					, CATE_CODE
					, ROWNUM AS ROW_NUM
				FROM PLACE
				WHERE CATE_CODE = #{cateCode}
				AND PLACE_ADDR LIKE '%'||#{locationName}||'%'
			)
		WHERE ROW_NUM &gt;= #{startNum} AND ROW_NUM &lt;= #{endNum}
	</select>

	<!-- 전체 데이터 갯수 -->
	<select id="selectTotalCnt" resultType="int">
		SELECT COUNT(PLACE_CODE)
		FROM PLACE
		WHERE CATE_CODE = #{cateCode}
		AND PLACE_ADDR LIKE '%'||#{locationName}||'%'
	</select>

	<!--코스테이블의 코스코드 생성 -->
	<insert id="insertCourseCode">
		INSERT INTO COURSE
			VALUES(
					(SELECT 'COURSE_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(COURSE_CODE,8,4))),0)+1,4,0) FROM COURSE)
					,#{courseName}
					,#{memberId}
				   )
	</insert>
	<!-- 중복코스이름 검사 -->
	<select id="checkCourseName" resultMap="course">
		 SELECT 
		 	COURSE_NAME
		 	FROM COURSE
		 WHERE COURSE_NAME=#{courseName} 
		 		AND
		 		MEMBER_ID=#{memberId}
	</select> 
	<!--코스테이블의 courseCode조회 -->
		<select id="selectCourseCode" resultMap="course">
		SELECT
			COURSE_NAME
			,MEMBER_ID
			,COURSE_CODE
			FROM COURSE
		WHERE COURSE_NAME=#{courseName}
				AND
			  MEMBER_ID=#{memberId}		
		
		
		</select>
	<!-- course_reg_Place table에 코스등록  -->
	<insert id="insertCourseByCourseCode">
	INSERT INTO COURSE_REG_PLACE
		(
			SAVE_PLACE_CODE
		    , PLACE_NAME
		    , PLACE_ADDR
		    , CATE_CODE
		    , COURSE_CODE
		)
	VALUES(
			(SELECT 'SAVE_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(SAVE_PLACE_CODE,6,4))),0)+1,4,0) FROM COURSE_REG_PLACE)
			,#{placeName}
			,#{placeAddr}
			,#{cateCode}
			,#{courseCode}
		)
	
	</insert>
	
	<!--아이디별 코스 조회-->
	<select id="selectCourseByMemberId" resultMap="course">
		SELECT C.MEMBER_ID
			,C.COURSE_NAME
			,P.COURSE_CODE
			,P.PLACE_NAME
			,P.PLACE_ADDR
			,P.SAVE_PLACE_CODE
			,P.CATE_CODE		 
		FROM COURSE C, COURSE_REG_PLACE P 
		WHERE C.COURSE_CODE=P.COURSE_CODE AND MEMBER_ID=#{memberId} 
		ORDER BY P.SAVE_PLACE_CODE
	</select>
	
	<!-- 코스에 등록된 장소 삭제 -->
	<delete id="deletePlaceInCourse">
		DELETE COURSE_REG_PLACE
		WHERE SAVE_PLACE_CODE = #{savePlaceCode}
	</delete>
	
	
	
	
	
</mapper>

	










